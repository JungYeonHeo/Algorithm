"""
문제: 메디컬 병원 응급실에는 의사가 한 명밖에 없다.
응급실은 환자가 도착한 순서대로 진료를 한다.
하지만 위험도가 높은 환자는 빨리 응급조치를 의사가 해야 하기 때문에 
이런 문제를 보완하기 위해 응급실은 다음과 같은 방법으로 환자의 진료 순서를 정한다.
- 환자가 접수한 순서대로 목록에서 제일 앞에 있는 환자 목록을 꺼낸다.
- 나머지 대기 목록에서 꺼낸 환자 보다 위험도가 높은 환자가 존재하면 대기목록 제일 뒤로 다시 넣고 
그렇지 않으면 진료를 받는다.
즉, 대기목록에 자기보다 위험도가 높은 환자가 없을 때 자신이 진료를 받는 구조이다.

현재 N명의, 환자가 대기목록애 있을 때, 
N명의 환자가 대기목록 순서의 환자 위럼도가 주어지면, 대기목록상의 M번째 환자는 몇 번째로 진료를 받는지 출력
(대기목록상의 M번째는 대기목록의 제일 처음 환자를 0번째로 간주하여 표헌한 것)

첫 줄에 자연수 N과 M이 주어진다.
두 번째 줄에 접수한 순서대로 환자의 위험도가 주어진다.
위험도는 값이 높을수록 더 위험하다는 뜻이고 같은 값의 위험도가 존재할 수 있다.

5 2
60 50 70 80 90
"""

# 큐 (같은 위험도가 존재하기 때문에 정렬해서 풀면 안됨)
import sys
from collections import deque
# sys.stdin = open("input.txt", "r")
n, m = map(int, input().split())
Q = [(pos, val) for pos, val in enumerate(list(map(int, input().split())))] # (번째, 위험도)
Q = deque(Q)
cnt = 0
while True:
    cur = Q.popleft()
    if any(cur[1] < x[1] for x in Q): # 현재 사람보다 뒤에 사람의 위험도가 더 높은 경우
        Q.append(cur)
    else:
        cnt += 1
        if cur[0] == m:
            print(cnt)
            break



